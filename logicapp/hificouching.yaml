{
    "properties": {
        "provisioningState": "Succeeded",
        "createdTime": "2023-05-18T12:23:05.0198485Z",
        "changedTime": "2023-08-05T10:34:20.0058979Z",
        "state": "Enabled",
        "version": "08585103752254810449",
        "accessEndpoint": "https://prod-92.westeurope.logic.azure.com:443/workflows/6bb2a05a8b4d439cabbe23b37eff04a3",
        "definition": {
            "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
            "contentVersion": "1.0.0.0",
            "parameters": {
                "$connections": {
                    "defaultValue": {},
                    "type": "Object"
                }
            },
            "triggers": {
                "Recurrence": {
                    "recurrence": {
                        "frequency": "Day",
                        "interval": 1,
                        "schedule": {
                            "hours": [
                                "4"
                            ],
                            "minutes": [
                                1
                            ]
                        },
                        "timeZone": "W. Europe Standard Time"
                    },
                    "evaluatedRecurrence": {
                        "frequency": "Day",
                        "interval": 1,
                        "schedule": {
                            "hours": [
                                "4"
                            ],
                            "minutes": [
                                1
                            ]
                        },
                        "timeZone": "W. Europe Standard Time"
                    },
                    "type": "Recurrence"
                }
            },
            "actions": {
                "For_each_cleanup_old_excel": {
                    "foreach": "@body('List_rows_present_in_a_table')?['value']",
                    "actions": {
                        "Delete_a_row": {
                            "runAfter": {},
                            "metadata": {
                                "01RM2I4UBF75TQVOOTMRF2KEFNXJRZVVWO": "/hifi/PROD_HIFISETUPS/hifisetupsgeo.xlsx"
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['excelonlinebusiness']['connectionId']"
                                    }
                                },
                                "method": "delete",
                                "path": "/drives/@{encodeURIComponent('b!Fwojy5ieE0WD6jCvQKWgYQ_5M4PWq4tBsVJthbtUnEX6FaHuuwY6Rag9olOxd_IH')}/files/@{encodeURIComponent(encodeURIComponent('01RM2I4UBF75TQVOOTMRF2KEFNXJRZVVWO'))}/tables/@{encodeURIComponent('{FBB8CEC5-5E3A-4596-9E5E-EDC1A2443633}')}/items/@{encodeURIComponent(encodeURIComponent(items('For_each_cleanup_old_excel')?['ID']))}",
                                "queries": {
                                    "idColumn": "ID",
                                    "source": "me"
                                }
                            }
                        }
                    },
                    "runAfter": {
                        "List_rows_present_in_a_table": [
                            "Succeeded"
                        ]
                    },
                    "type": "Foreach",
                    "runtimeConfiguration": {
                        "concurrency": {
                            "repetitions": 50
                        }
                    }
                },
                "For_each_get_geo": {
                    "foreach": "@body('Get_rows_from_Google_Sheets_-_Forms_Feedback')?['value']",
                    "actions": {
                        "Condition": {
                            "actions": {
                                "Add_results_into_excel": {
                                    "runAfter": {
                                        "Get_location_by_address": [
                                            "Succeeded"
                                        ]
                                    },
                                    "metadata": {
                                        "01RM2I4UBF75TQVOOTMRF2KEFNXJRZVVWO": "/hifi/PROD_HIFISETUPS/hifisetupsgeo.xlsx",
                                        "01RM2I4UD6PBMTJPWFCJDILZP5SK4ZLHPH": "/hifi/PROD_HIFISETUPS/hifisetupsgeo.xlsx",
                                        "01RM2I4UGEDJVAZREVSZEKW2YJTVOTMH4B": "/hifi/PROD_HIFISETUPS/hifisetupsgeo.xlsx",
                                        "01RM2I4UHOVLVH3JTBSFBJIY7EZPMH67TV": "/hifi/PROD_HIFISETUPS/hifisetupsgeo.xlsx"
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "AMPs": "@{replace(items('For_each_get_geo')?['AMPs'],',',';')}",
                                            "City": "@{items('For_each_get_geo')?['City']} ",
                                            "City District": "@items('For_each_get_geo')?['City_x0020_District']",
                                            "Country": "@items('For_each_get_geo')?['Country']",
                                            "First Name": "@items('For_each_get_geo')?['First_x0020_Name']",
                                            "ID": "@items('For_each_get_geo')?['SetupID']",
                                            "Last Name": "undisclosed",
                                            "Max persons": "@items('For_each_get_geo')?['Max_x0020_persons_x0020_for_x0020_invite']",
                                            "Overnight stay": "@items('For_each_get_geo')?['Overnight_x0020_stay_x0020_possible']",
                                            "PLZ": "@items('For_each_get_geo')?['Postal_x0020_Code']",
                                            "Pre-AMPs": "@{replace(items('For_each_get_geo')?['Pre-AMPs'],',',';')}",
                                            "Sources": "@{replace(items('For_each_get_geo')?['Sources'],',',';')}",
                                            "Speakers": "@{replace(items('For_each_get_geo')?['Speakers'],',',';')}",
                                            "Timestamp": "@items('For_each_get_geo')?['Timestamp']",
                                            "lat": "@{body('Get_location_by_address')?['point']?['coordinates']?['latitude']}",
                                            "lng": "@{body('Get_location_by_address')?['point']?['coordinates']?['longitude']}"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['excelonlinebusiness']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/codeless/v1.2/drives/@{encodeURIComponent('b!Fwojy5ieE0WD6jCvQKWgYQ_5M4PWq4tBsVJthbtUnEX6FaHuuwY6Rag9olOxd_IH')}/items/@{encodeURIComponent(encodeURIComponent('01RM2I4UBF75TQVOOTMRF2KEFNXJRZVVWO'))}/workbook/tables/@{encodeURIComponent('{FBB8CEC5-5E3A-4596-9E5E-EDC1A2443633}')}/rows",
                                        "queries": {
                                            "source": "me"
                                        }
                                    }
                                },
                                "Get_location_by_address": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['bingmaps']['connectionId']"
                                            }
                                        },
                                        "method": "get",
                                        "path": "/REST/v1/Locations",
                                        "queries": {
                                            "adminDistrict": "@items('For_each_get_geo')?['City_x0020_District']",
                                            "countryRegion": "@items('For_each_get_geo')?['Country']",
                                            "locality": "@items('For_each_get_geo')?['City']",
                                            "postalCode": "@items('For_each_get_geo')?['Postal_x0020_Code']"
                                        }
                                    }
                                }
                            },
                            "runAfter": {},
                            "expression": {
                                "and": [
                                    {
                                        "not": {
                                            "equals": [
                                                "@items('For_each_get_geo')?['Country']",
                                                "@null"
                                            ]
                                        }
                                    },
                                    {
                                        "not": {
                                            "equals": [
                                                "@items('For_each_get_geo')?['City']",
                                                "@null"
                                            ]
                                        }
                                    },
                                    {
                                        "not": {
                                            "equals": [
                                                "@items('For_each_get_geo')?['City_x0020_District']",
                                                "@null"
                                            ]
                                        }
                                    },
                                    {
                                        "not": {
                                            "equals": [
                                                "@items('For_each_get_geo')?['Postal_x0020_Code']",
                                                "@null"
                                            ]
                                        }
                                    }
                                ]
                            },
                            "type": "If"
                        }
                    },
                    "runAfter": {
                        "Get_rows_from_Google_Sheets_-_Forms_Feedback": [
                            "Succeeded"
                        ]
                    },
                    "type": "Foreach"
                },
                "For_each_write_new_csv": {
                    "foreach": "@body('List_rows_present_in_a_table')?['value']",
                    "actions": {
                        "Condition_2": {
                            "actions": {
                                "Append_to_array_variable": {
                                    "runAfter": {},
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "int_array",
                                        "value": "@items('For_each_write_new_csv')"
                                    }
                                },
                                "Compose": {
                                    "runAfter": {
                                        "Append_to_array_variable": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": "@json(replace(string(outputs('List_rows_present_in_a_table')?['body/value']),'@odata.etag','odataetag'))"
                                },
                                "Create_CSV_table": {
                                    "runAfter": {
                                        "Compose": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Table",
                                    "inputs": {
                                        "format": "CSV",
                                        "from": "@outputs('Compose')"
                                    }
                                },
                                "Create_file": {
                                    "runAfter": {
                                        "Create_CSV_table": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@body('Create_CSV_table')",
                                        "headers": {
                                            "ReadFileMetadataFromServer": true
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azurefile']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "/logicapps",
                                            "name": "hifisetups_tmp.csv",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                }
                            },
                            "runAfter": {},
                            "expression": {
                                "and": [
                                    {
                                        "not": {
                                            "equals": [
                                                "",
                                                "@null"
                                            ]
                                        }
                                    },
                                    {
                                        "not": {
                                            "equals": [
                                                "",
                                                "@null"
                                            ]
                                        }
                                    },
                                    {
                                        "not": {
                                            "equals": [
                                                "",
                                                "@null"
                                            ]
                                        }
                                    }
                                ]
                            },
                            "type": "If"
                        }
                    },
                    "runAfter": {
                        "Initialize_var_-_int_array_2": [
                            "Succeeded"
                        ]
                    },
                    "type": "Foreach"
                },
                "Get_rows_from_Google_Sheets_-_Forms_Feedback": {
                    "runAfter": {
                        "Initialize_var_-_geo": [
                            "Succeeded"
                        ]
                    },
                    "metadata": {
                        "1CK40-WM6YlQ3CKLAUmetv2C9jFS0DOBk8b_8gUuKVjk": "/hificouchsurfing/hifisetup"
                    },
                    "type": "ApiConnection",
                    "inputs": {
                        "host": {
                            "connection": {
                                "name": "@parameters('$connections')['googlesheet']['connectionId']"
                            }
                        },
                        "method": "get",
                        "path": "/datasets/@{encodeURIComponent(encodeURIComponent('1CK40-WM6YlQ3CKLAUmetv2C9jFS0DOBk8b_8gUuKVjk'))}/tables/@{encodeURIComponent(encodeURIComponent('1864909152'))}/items"
                    }
                },
                "Initialize_var_-_geo": {
                    "runAfter": {
                        "For_each_cleanup_old_excel": [
                            "Succeeded"
                        ]
                    },
                    "type": "InitializeVariable",
                    "inputs": {
                        "variables": [
                            {
                                "name": "geoinfo",
                                "type": "string"
                            }
                        ]
                    }
                },
                "Initialize_var_-_int_array": {
                    "runAfter": {
                        "For_each_get_geo": [
                            "Succeeded"
                        ]
                    },
                    "type": "InitializeVariable",
                    "inputs": {
                        "variables": [
                            {
                                "name": "int_array",
                                "type": "array"
                            }
                        ]
                    }
                },
                "Initialize_var_-_int_array_2": {
                    "runAfter": {
                        "Initialize_var_-_int_array": [
                            "Succeeded"
                        ]
                    },
                    "type": "InitializeVariable",
                    "inputs": {
                        "variables": [
                            {
                                "name": "int_array_csv",
                                "type": "array"
                            }
                        ]
                    }
                },
                "List_rows_present_in_a_table": {
                    "runAfter": {},
                    "metadata": {
                        "01RM2I4UBF75TQVOOTMRF2KEFNXJRZVVWO": "/hifi/PROD_HIFISETUPS/hifisetupsgeo.xlsx"
                    },
                    "type": "ApiConnection",
                    "inputs": {
                        "host": {
                            "connection": {
                                "name": "@parameters('$connections')['excelonlinebusiness']['connectionId']"
                            }
                        },
                        "method": "get",
                        "path": "/drives/@{encodeURIComponent('b!Fwojy5ieE0WD6jCvQKWgYQ_5M4PWq4tBsVJthbtUnEX6FaHuuwY6Rag9olOxd_IH')}/files/@{encodeURIComponent(encodeURIComponent('01RM2I4UBF75TQVOOTMRF2KEFNXJRZVVWO'))}/tables/@{encodeURIComponent('{FBB8CEC5-5E3A-4596-9E5E-EDC1A2443633}')}/items",
                        "queries": {
                            "source": "me"
                        }
                    },
                    "runtimeConfiguration": {
                        "paginationPolicy": {
                            "minimumItemCount": 500
                        }
                    }
                }
            },
            "outputs": {}
        },
        "parameters": {
            "$connections": {
                "value": {
                    "azurefile": {
                        "connectionId": "/subscriptions/66ef043a-9f27-443a-aaee-b3d4f0c03009/resourceGroups/RG-PROD-WEB/providers/Microsoft.Web/connections/azurefile",
                        "connectionName": "azurefile",
                        "id": "/subscriptions/66ef043a-9f27-443a-aaee-b3d4f0c03009/providers/Microsoft.Web/locations/westeurope/managedApis/azurefile"
                    },
                    "bingmaps": {
                        "connectionId": "/subscriptions/66ef043a-9f27-443a-aaee-b3d4f0c03009/resourceGroups/RG-PROD-WEB/providers/Microsoft.Web/connections/bingmaps",
                        "connectionName": "bingmaps",
                        "id": "/subscriptions/66ef043a-9f27-443a-aaee-b3d4f0c03009/providers/Microsoft.Web/locations/westeurope/managedApis/bingmaps"
                    },
                    "excelonlinebusiness": {
                        "connectionId": "/subscriptions/66ef043a-9f27-443a-aaee-b3d4f0c03009/resourceGroups/RG-PROD-WEB/providers/Microsoft.Web/connections/excelonlinebusiness",
                        "connectionName": "excelonlinebusiness",
                        "id": "/subscriptions/66ef043a-9f27-443a-aaee-b3d4f0c03009/providers/Microsoft.Web/locations/westeurope/managedApis/excelonlinebusiness"
                    },
                    "googlesheet": {
                        "connectionId": "/subscriptions/66ef043a-9f27-443a-aaee-b3d4f0c03009/resourceGroups/RG-PROD-WEB/providers/Microsoft.Web/connections/googlesheet",
                        "connectionName": "googlesheet",
                        "id": "/subscriptions/66ef043a-9f27-443a-aaee-b3d4f0c03009/providers/Microsoft.Web/locations/westeurope/managedApis/googlesheet"
                    }
                }
            }
        },
        "endpointsConfiguration": {
            "workflow": {
                "outgoingIpAddresses": [
                    {
                        "address": "40.68.222.65"
                    },
                    {
                        "address": "40.68.209.23"
                    },
                    {
                        "address": "13.95.147.65"
                    },
                    {
                        "address": "23.97.218.130"
                    },
                    {
                        "address": "51.144.182.201"
                    },
                    {
                        "address": "23.97.211.179"
                    },
                    {
                        "address": "104.45.9.52"
                    },
                    {
                        "address": "23.97.210.126"
                    },
                    {
                        "address": "13.69.71.160"
                    },
                    {
                        "address": "13.69.71.161"
                    },
                    {
                        "address": "13.69.71.162"
                    },
                    {
                        "address": "13.69.71.163"
                    },
                    {
                        "address": "13.69.71.164"
                    },
                    {
                        "address": "13.69.71.165"
                    },
                    {
                        "address": "13.69.71.166"
                    },
                    {
                        "address": "13.69.71.167"
                    },
                    {
                        "address": "20.103.21.81"
                    },
                    {
                        "address": "20.103.17.247"
                    },
                    {
                        "address": "20.103.17.223"
                    },
                    {
                        "address": "20.103.16.47"
                    },
                    {
                        "address": "20.103.58.116"
                    },
                    {
                        "address": "20.103.57.29"
                    },
                    {
                        "address": "20.101.174.49"
                    },
                    {
                        "address": "20.101.174.23"
                    },
                    {
                        "address": "20.93.236.26"
                    },
                    {
                        "address": "20.93.235.107"
                    },
                    {
                        "address": "20.103.94.250"
                    },
                    {
                        "address": "20.76.174.72"
                    },
                    {
                        "address": "20.82.87.192"
                    },
                    {
                        "address": "20.82.87.16"
                    },
                    {
                        "address": "20.76.170.145"
                    },
                    {
                        "address": "20.103.91.39"
                    },
                    {
                        "address": "20.103.84.41"
                    },
                    {
                        "address": "20.76.161.156"
                    }
                ],
                "accessEndpointIpAddresses": [
                    {
                        "address": "13.95.155.53"
                    },
                    {
                        "address": "52.174.54.218"
                    },
                    {
                        "address": "52.174.49.6"
                    },
                    {
                        "address": "20.103.21.113"
                    },
                    {
                        "address": "20.103.18.84"
                    },
                    {
                        "address": "20.103.57.210"
                    },
                    {
                        "address": "20.101.174.52"
                    },
                    {
                        "address": "20.93.236.81"
                    },
                    {
                        "address": "20.103.94.255"
                    },
                    {
                        "address": "20.82.87.229"
                    },
                    {
                        "address": "20.76.171.34"
                    },
                    {
                        "address": "20.103.84.61"
                    }
                ]
            },
            "connector": {
                "outgoingIpAddresses": [
                    {
                        "address": "52.174.88.118"
                    },
                    {
                        "address": "40.91.208.65"
                    },
                    {
                        "address": "13.69.64.208/28"
                    },
                    {
                        "address": "13.69.71.192/27"
                    },
                    {
                        "address": "13.93.36.78"
                    },
                    {
                        "address": "20.86.93.32/27"
                    },
                    {
                        "address": "20.86.93.64/28"
                    },
                    {
                        "address": "20.126.243.151"
                    },
                    {
                        "address": "20.126.241.238"
                    },
                    {
                        "address": "20.103.132.139"
                    },
                    {
                        "address": "20.103.131.1"
                    }
                ]
            }
        }
    },
    "id": "/subscriptions/66ef043a-9f27-443a-aaee-b3d4f0c03009/resourceGroups/RG-PROD-WEB/providers/Microsoft.Logic/workflows/hificouchworkflow",
    "name": "hificouchworkflow",
    "type": "Microsoft.Logic/workflows",
    "location": "westeurope",
    "tags": {}
}
